{"ast":null,"code":"import _defineProperty from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport net from 'node:net';\nimport unhandler from './utils/unhandle.js';\nconst reentry = Symbol('reentry');\nconst noop = () => {};\nexport class TimeoutError extends Error {\n  constructor(threshold, event) {\n    super(\"Timeout awaiting '\".concat(event, \"' for \").concat(threshold, \"ms\"));\n    _defineProperty(this, \"event\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    this.event = event;\n    this.name = 'TimeoutError';\n    this.code = 'ETIMEDOUT';\n  }\n}\nexport default function timedOut(request, delays, options) {\n  if (reentry in request) {\n    return noop;\n  }\n  request[reentry] = true;\n  const cancelers = [];\n  const {\n    once,\n    unhandleAll\n  } = unhandler();\n  const handled = new Map();\n  const addTimeout = (delay, callback, event) => {\n    var _timeout$unref;\n    const timeout = setTimeout(callback, delay, delay, event);\n    (_timeout$unref = timeout.unref) === null || _timeout$unref === void 0 || _timeout$unref.call(timeout);\n    const cancel = () => {\n      handled.set(event, true);\n      clearTimeout(timeout);\n    };\n    cancelers.push(cancel);\n    return cancel;\n  };\n  const {\n    host,\n    hostname\n  } = options;\n  const timeoutHandler = (delay, event) => {\n    // Use setTimeout to allow for any cancelled events to be handled first,\n    // to prevent firing any TimeoutError unneeded when the event loop is busy or blocked\n    setTimeout(() => {\n      if (!handled.has(event)) {\n        request.destroy(new TimeoutError(delay, event));\n      }\n    }, 0);\n  };\n  const cancelTimeouts = () => {\n    for (const cancel of cancelers) {\n      cancel();\n    }\n    unhandleAll();\n  };\n  request.once('error', error => {\n    cancelTimeouts();\n    // Save original behavior\n    /* istanbul ignore next */\n    if (request.listenerCount('error') === 0) {\n      throw error;\n    }\n  });\n  if (delays.request !== undefined) {\n    const cancelTimeout = addTimeout(delays.request, timeoutHandler, 'request');\n    once(request, 'response', response => {\n      once(response, 'end', cancelTimeout);\n    });\n  }\n  if (delays.socket !== undefined) {\n    const {\n      socket\n    } = delays;\n    const socketTimeoutHandler = () => {\n      timeoutHandler(socket, 'socket');\n    };\n    request.setTimeout(socket, socketTimeoutHandler);\n    // `request.setTimeout(0)` causes a memory leak.\n    // We can just remove the listener and forget about the timer - it's unreffed.\n    // See https://github.com/sindresorhus/got/issues/690\n    cancelers.push(() => {\n      request.removeListener('timeout', socketTimeoutHandler);\n    });\n  }\n  const hasLookup = delays.lookup !== undefined;\n  const hasConnect = delays.connect !== undefined;\n  const hasSecureConnect = delays.secureConnect !== undefined;\n  const hasSend = delays.send !== undefined;\n  if (hasLookup || hasConnect || hasSecureConnect || hasSend) {\n    once(request, 'socket', socket => {\n      const {\n        socketPath\n      } = request;\n      /* istanbul ignore next: hard to test */\n      if (socket.connecting) {\n        var _ref;\n        const hasPath = Boolean(socketPath !== null && socketPath !== void 0 ? socketPath : net.isIP((_ref = hostname !== null && hostname !== void 0 ? hostname : host) !== null && _ref !== void 0 ? _ref : '') !== 0);\n        if (hasLookup && !hasPath && socket.address().address === undefined) {\n          const cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');\n          once(socket, 'lookup', cancelTimeout);\n        }\n        if (hasConnect) {\n          const timeConnect = () => addTimeout(delays.connect, timeoutHandler, 'connect');\n          if (hasPath) {\n            once(socket, 'connect', timeConnect());\n          } else {\n            once(socket, 'lookup', error => {\n              if (error === null) {\n                once(socket, 'connect', timeConnect());\n              }\n            });\n          }\n        }\n        if (hasSecureConnect && options.protocol === 'https:') {\n          once(socket, 'connect', () => {\n            const cancelTimeout = addTimeout(delays.secureConnect, timeoutHandler, 'secureConnect');\n            once(socket, 'secureConnect', cancelTimeout);\n          });\n        }\n      }\n      if (hasSend) {\n        const timeRequest = () => addTimeout(delays.send, timeoutHandler, 'send');\n        /* istanbul ignore next: hard to test */\n        if (socket.connecting) {\n          once(socket, 'connect', () => {\n            once(request, 'upload-complete', timeRequest());\n          });\n        } else {\n          once(request, 'upload-complete', timeRequest());\n        }\n      }\n    });\n  }\n  if (delays.response !== undefined) {\n    once(request, 'upload-complete', () => {\n      const cancelTimeout = addTimeout(delays.response, timeoutHandler, 'response');\n      once(request, 'response', cancelTimeout);\n    });\n  }\n  if (delays.read !== undefined) {\n    once(request, 'response', response => {\n      const cancelTimeout = addTimeout(delays.read, timeoutHandler, 'read');\n      once(response, 'end', cancelTimeout);\n    });\n  }\n  return cancelTimeouts;\n}","map":{"version":3,"names":["net","unhandler","reentry","Symbol","noop","TimeoutError","Error","constructor","threshold","event","concat","_defineProperty","name","code","timedOut","request","delays","options","cancelers","once","unhandleAll","handled","Map","addTimeout","delay","callback","_timeout$unref","timeout","setTimeout","unref","call","cancel","set","clearTimeout","push","host","hostname","timeoutHandler","has","destroy","cancelTimeouts","error","listenerCount","undefined","cancelTimeout","response","socket","socketTimeoutHandler","removeListener","hasLookup","lookup","hasConnect","connect","hasSecureConnect","secureConnect","hasSend","send","socketPath","connecting","_ref","hasPath","Boolean","isIP","address","timeConnect","protocol","timeRequest","read"],"sources":["C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/got/dist/source/core/timed-out.js"],"sourcesContent":["import net from 'node:net';\nimport unhandler from './utils/unhandle.js';\nconst reentry = Symbol('reentry');\nconst noop = () => { };\nexport class TimeoutError extends Error {\n    event;\n    code;\n    constructor(threshold, event) {\n        super(`Timeout awaiting '${event}' for ${threshold}ms`);\n        this.event = event;\n        this.name = 'TimeoutError';\n        this.code = 'ETIMEDOUT';\n    }\n}\nexport default function timedOut(request, delays, options) {\n    if (reentry in request) {\n        return noop;\n    }\n    request[reentry] = true;\n    const cancelers = [];\n    const { once, unhandleAll } = unhandler();\n    const handled = new Map();\n    const addTimeout = (delay, callback, event) => {\n        const timeout = setTimeout(callback, delay, delay, event);\n        timeout.unref?.();\n        const cancel = () => {\n            handled.set(event, true);\n            clearTimeout(timeout);\n        };\n        cancelers.push(cancel);\n        return cancel;\n    };\n    const { host, hostname } = options;\n    const timeoutHandler = (delay, event) => {\n        // Use setTimeout to allow for any cancelled events to be handled first,\n        // to prevent firing any TimeoutError unneeded when the event loop is busy or blocked\n        setTimeout(() => {\n            if (!handled.has(event)) {\n                request.destroy(new TimeoutError(delay, event));\n            }\n        }, 0);\n    };\n    const cancelTimeouts = () => {\n        for (const cancel of cancelers) {\n            cancel();\n        }\n        unhandleAll();\n    };\n    request.once('error', error => {\n        cancelTimeouts();\n        // Save original behavior\n        /* istanbul ignore next */\n        if (request.listenerCount('error') === 0) {\n            throw error;\n        }\n    });\n    if (delays.request !== undefined) {\n        const cancelTimeout = addTimeout(delays.request, timeoutHandler, 'request');\n        once(request, 'response', (response) => {\n            once(response, 'end', cancelTimeout);\n        });\n    }\n    if (delays.socket !== undefined) {\n        const { socket } = delays;\n        const socketTimeoutHandler = () => {\n            timeoutHandler(socket, 'socket');\n        };\n        request.setTimeout(socket, socketTimeoutHandler);\n        // `request.setTimeout(0)` causes a memory leak.\n        // We can just remove the listener and forget about the timer - it's unreffed.\n        // See https://github.com/sindresorhus/got/issues/690\n        cancelers.push(() => {\n            request.removeListener('timeout', socketTimeoutHandler);\n        });\n    }\n    const hasLookup = delays.lookup !== undefined;\n    const hasConnect = delays.connect !== undefined;\n    const hasSecureConnect = delays.secureConnect !== undefined;\n    const hasSend = delays.send !== undefined;\n    if (hasLookup || hasConnect || hasSecureConnect || hasSend) {\n        once(request, 'socket', (socket) => {\n            const { socketPath } = request;\n            /* istanbul ignore next: hard to test */\n            if (socket.connecting) {\n                const hasPath = Boolean(socketPath ?? net.isIP(hostname ?? host ?? '') !== 0);\n                if (hasLookup && !hasPath && socket.address().address === undefined) {\n                    const cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');\n                    once(socket, 'lookup', cancelTimeout);\n                }\n                if (hasConnect) {\n                    const timeConnect = () => addTimeout(delays.connect, timeoutHandler, 'connect');\n                    if (hasPath) {\n                        once(socket, 'connect', timeConnect());\n                    }\n                    else {\n                        once(socket, 'lookup', (error) => {\n                            if (error === null) {\n                                once(socket, 'connect', timeConnect());\n                            }\n                        });\n                    }\n                }\n                if (hasSecureConnect && options.protocol === 'https:') {\n                    once(socket, 'connect', () => {\n                        const cancelTimeout = addTimeout(delays.secureConnect, timeoutHandler, 'secureConnect');\n                        once(socket, 'secureConnect', cancelTimeout);\n                    });\n                }\n            }\n            if (hasSend) {\n                const timeRequest = () => addTimeout(delays.send, timeoutHandler, 'send');\n                /* istanbul ignore next: hard to test */\n                if (socket.connecting) {\n                    once(socket, 'connect', () => {\n                        once(request, 'upload-complete', timeRequest());\n                    });\n                }\n                else {\n                    once(request, 'upload-complete', timeRequest());\n                }\n            }\n        });\n    }\n    if (delays.response !== undefined) {\n        once(request, 'upload-complete', () => {\n            const cancelTimeout = addTimeout(delays.response, timeoutHandler, 'response');\n            once(request, 'response', cancelTimeout);\n        });\n    }\n    if (delays.read !== undefined) {\n        once(request, 'response', (response) => {\n            const cancelTimeout = addTimeout(delays.read, timeoutHandler, 'read');\n            once(response, 'end', cancelTimeout);\n        });\n    }\n    return cancelTimeouts;\n}\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,UAAU;AAC1B,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,MAAMC,OAAO,GAAGC,MAAM,CAAC,SAAS,CAAC;AACjC,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAE,CAAC;AACtB,OAAO,MAAMC,YAAY,SAASC,KAAK,CAAC;EAGpCC,WAAWA,CAACC,SAAS,EAAEC,KAAK,EAAE;IAC1B,KAAK,sBAAAC,MAAA,CAAsBD,KAAK,YAAAC,MAAA,CAASF,SAAS,OAAI,CAAC;IAACG,eAAA;IAAAA,eAAA;IACxD,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACG,IAAI,GAAG,cAAc;IAC1B,IAAI,CAACC,IAAI,GAAG,WAAW;EAC3B;AACJ;AACA,eAAe,SAASC,QAAQA,CAACC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACvD,IAAIf,OAAO,IAAIa,OAAO,EAAE;IACpB,OAAOX,IAAI;EACf;EACAW,OAAO,CAACb,OAAO,CAAC,GAAG,IAAI;EACvB,MAAMgB,SAAS,GAAG,EAAE;EACpB,MAAM;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGnB,SAAS,CAAC,CAAC;EACzC,MAAMoB,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEhB,KAAK,KAAK;IAAA,IAAAiB,cAAA;IAC3C,MAAMC,OAAO,GAAGC,UAAU,CAACH,QAAQ,EAAED,KAAK,EAAEA,KAAK,EAAEf,KAAK,CAAC;IACzD,CAAAiB,cAAA,GAAAC,OAAO,CAACE,KAAK,cAAAH,cAAA,eAAbA,cAAA,CAAAI,IAAA,CAAAH,OAAgB,CAAC;IACjB,MAAMI,MAAM,GAAGA,CAAA,KAAM;MACjBV,OAAO,CAACW,GAAG,CAACvB,KAAK,EAAE,IAAI,CAAC;MACxBwB,YAAY,CAACN,OAAO,CAAC;IACzB,CAAC;IACDT,SAAS,CAACgB,IAAI,CAACH,MAAM,CAAC;IACtB,OAAOA,MAAM;EACjB,CAAC;EACD,MAAM;IAAEI,IAAI;IAAEC;EAAS,CAAC,GAAGnB,OAAO;EAClC,MAAMoB,cAAc,GAAGA,CAACb,KAAK,EAAEf,KAAK,KAAK;IACrC;IACA;IACAmB,UAAU,CAAC,MAAM;MACb,IAAI,CAACP,OAAO,CAACiB,GAAG,CAAC7B,KAAK,CAAC,EAAE;QACrBM,OAAO,CAACwB,OAAO,CAAC,IAAIlC,YAAY,CAACmB,KAAK,EAAEf,KAAK,CAAC,CAAC;MACnD;IACJ,CAAC,EAAE,CAAC,CAAC;EACT,CAAC;EACD,MAAM+B,cAAc,GAAGA,CAAA,KAAM;IACzB,KAAK,MAAMT,MAAM,IAAIb,SAAS,EAAE;MAC5Ba,MAAM,CAAC,CAAC;IACZ;IACAX,WAAW,CAAC,CAAC;EACjB,CAAC;EACDL,OAAO,CAACI,IAAI,CAAC,OAAO,EAAEsB,KAAK,IAAI;IAC3BD,cAAc,CAAC,CAAC;IAChB;IACA;IACA,IAAIzB,OAAO,CAAC2B,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;MACtC,MAAMD,KAAK;IACf;EACJ,CAAC,CAAC;EACF,IAAIzB,MAAM,CAACD,OAAO,KAAK4B,SAAS,EAAE;IAC9B,MAAMC,aAAa,GAAGrB,UAAU,CAACP,MAAM,CAACD,OAAO,EAAEsB,cAAc,EAAE,SAAS,CAAC;IAC3ElB,IAAI,CAACJ,OAAO,EAAE,UAAU,EAAG8B,QAAQ,IAAK;MACpC1B,IAAI,CAAC0B,QAAQ,EAAE,KAAK,EAAED,aAAa,CAAC;IACxC,CAAC,CAAC;EACN;EACA,IAAI5B,MAAM,CAAC8B,MAAM,KAAKH,SAAS,EAAE;IAC7B,MAAM;MAAEG;IAAO,CAAC,GAAG9B,MAAM;IACzB,MAAM+B,oBAAoB,GAAGA,CAAA,KAAM;MAC/BV,cAAc,CAACS,MAAM,EAAE,QAAQ,CAAC;IACpC,CAAC;IACD/B,OAAO,CAACa,UAAU,CAACkB,MAAM,EAAEC,oBAAoB,CAAC;IAChD;IACA;IACA;IACA7B,SAAS,CAACgB,IAAI,CAAC,MAAM;MACjBnB,OAAO,CAACiC,cAAc,CAAC,SAAS,EAAED,oBAAoB,CAAC;IAC3D,CAAC,CAAC;EACN;EACA,MAAME,SAAS,GAAGjC,MAAM,CAACkC,MAAM,KAAKP,SAAS;EAC7C,MAAMQ,UAAU,GAAGnC,MAAM,CAACoC,OAAO,KAAKT,SAAS;EAC/C,MAAMU,gBAAgB,GAAGrC,MAAM,CAACsC,aAAa,KAAKX,SAAS;EAC3D,MAAMY,OAAO,GAAGvC,MAAM,CAACwC,IAAI,KAAKb,SAAS;EACzC,IAAIM,SAAS,IAAIE,UAAU,IAAIE,gBAAgB,IAAIE,OAAO,EAAE;IACxDpC,IAAI,CAACJ,OAAO,EAAE,QAAQ,EAAG+B,MAAM,IAAK;MAChC,MAAM;QAAEW;MAAW,CAAC,GAAG1C,OAAO;MAC9B;MACA,IAAI+B,MAAM,CAACY,UAAU,EAAE;QAAA,IAAAC,IAAA;QACnB,MAAMC,OAAO,GAAGC,OAAO,CAACJ,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAIzD,GAAG,CAAC8D,IAAI,EAAAH,IAAA,GAACvB,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAID,IAAI,cAAAwB,IAAA,cAAAA,IAAA,GAAI,EAAE,CAAC,KAAK,CAAC,CAAC;QAC7E,IAAIV,SAAS,IAAI,CAACW,OAAO,IAAId,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACA,OAAO,KAAKpB,SAAS,EAAE;UACjE,MAAMC,aAAa,GAAGrB,UAAU,CAACP,MAAM,CAACkC,MAAM,EAAEb,cAAc,EAAE,QAAQ,CAAC;UACzElB,IAAI,CAAC2B,MAAM,EAAE,QAAQ,EAAEF,aAAa,CAAC;QACzC;QACA,IAAIO,UAAU,EAAE;UACZ,MAAMa,WAAW,GAAGA,CAAA,KAAMzC,UAAU,CAACP,MAAM,CAACoC,OAAO,EAAEf,cAAc,EAAE,SAAS,CAAC;UAC/E,IAAIuB,OAAO,EAAE;YACTzC,IAAI,CAAC2B,MAAM,EAAE,SAAS,EAAEkB,WAAW,CAAC,CAAC,CAAC;UAC1C,CAAC,MACI;YACD7C,IAAI,CAAC2B,MAAM,EAAE,QAAQ,EAAGL,KAAK,IAAK;cAC9B,IAAIA,KAAK,KAAK,IAAI,EAAE;gBAChBtB,IAAI,CAAC2B,MAAM,EAAE,SAAS,EAAEkB,WAAW,CAAC,CAAC,CAAC;cAC1C;YACJ,CAAC,CAAC;UACN;QACJ;QACA,IAAIX,gBAAgB,IAAIpC,OAAO,CAACgD,QAAQ,KAAK,QAAQ,EAAE;UACnD9C,IAAI,CAAC2B,MAAM,EAAE,SAAS,EAAE,MAAM;YAC1B,MAAMF,aAAa,GAAGrB,UAAU,CAACP,MAAM,CAACsC,aAAa,EAAEjB,cAAc,EAAE,eAAe,CAAC;YACvFlB,IAAI,CAAC2B,MAAM,EAAE,eAAe,EAAEF,aAAa,CAAC;UAChD,CAAC,CAAC;QACN;MACJ;MACA,IAAIW,OAAO,EAAE;QACT,MAAMW,WAAW,GAAGA,CAAA,KAAM3C,UAAU,CAACP,MAAM,CAACwC,IAAI,EAAEnB,cAAc,EAAE,MAAM,CAAC;QACzE;QACA,IAAIS,MAAM,CAACY,UAAU,EAAE;UACnBvC,IAAI,CAAC2B,MAAM,EAAE,SAAS,EAAE,MAAM;YAC1B3B,IAAI,CAACJ,OAAO,EAAE,iBAAiB,EAAEmD,WAAW,CAAC,CAAC,CAAC;UACnD,CAAC,CAAC;QACN,CAAC,MACI;UACD/C,IAAI,CAACJ,OAAO,EAAE,iBAAiB,EAAEmD,WAAW,CAAC,CAAC,CAAC;QACnD;MACJ;IACJ,CAAC,CAAC;EACN;EACA,IAAIlD,MAAM,CAAC6B,QAAQ,KAAKF,SAAS,EAAE;IAC/BxB,IAAI,CAACJ,OAAO,EAAE,iBAAiB,EAAE,MAAM;MACnC,MAAM6B,aAAa,GAAGrB,UAAU,CAACP,MAAM,CAAC6B,QAAQ,EAAER,cAAc,EAAE,UAAU,CAAC;MAC7ElB,IAAI,CAACJ,OAAO,EAAE,UAAU,EAAE6B,aAAa,CAAC;IAC5C,CAAC,CAAC;EACN;EACA,IAAI5B,MAAM,CAACmD,IAAI,KAAKxB,SAAS,EAAE;IAC3BxB,IAAI,CAACJ,OAAO,EAAE,UAAU,EAAG8B,QAAQ,IAAK;MACpC,MAAMD,aAAa,GAAGrB,UAAU,CAACP,MAAM,CAACmD,IAAI,EAAE9B,cAAc,EAAE,MAAM,CAAC;MACrElB,IAAI,CAAC0B,QAAQ,EAAE,KAAK,EAAED,aAAa,CAAC;IACxC,CAAC,CAAC;EACN;EACA,OAAOJ,cAAc;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}