{"ast":null,"code":"'use strict';\n\n/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */\nconst makeError = (Base, key, getMessage) => {\n  module.exports[key] = class NodeError extends Base {\n    constructor() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      super(typeof getMessage === 'string' ? getMessage : getMessage(args));\n      this.name = \"\".concat(super.name, \" [\").concat(key, \"]\");\n      this.code = key;\n    }\n  };\n};\nmakeError(TypeError, 'ERR_INVALID_ARG_TYPE', args => {\n  const type = args[0].includes('.') ? 'property' : 'argument';\n  let valid = args[1];\n  const isManyTypes = Array.isArray(valid);\n  if (isManyTypes) {\n    valid = \"\".concat(valid.slice(0, -1).join(', '), \" or \").concat(valid.slice(-1));\n  }\n  return \"The \\\"\".concat(args[0], \"\\\" \").concat(type, \" must be \").concat(isManyTypes ? 'one of' : 'of', \" type \").concat(valid, \". Received \").concat(typeof args[2]);\n});\nmakeError(TypeError, 'ERR_INVALID_PROTOCOL', args => \"Protocol \\\"\".concat(args[0], \"\\\" not supported. Expected \\\"\").concat(args[1], \"\\\"\"));\nmakeError(Error, 'ERR_HTTP_HEADERS_SENT', args => \"Cannot \".concat(args[0], \" headers after they are sent to the client\"));\nmakeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', args => \"\".concat(args[0], \" must be a valid HTTP token [\").concat(args[1], \"]\"));\nmakeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', args => \"Invalid value \\\"\".concat(args[0], \" for header \\\"\").concat(args[1], \"\\\"\"));\nmakeError(TypeError, 'ERR_INVALID_CHAR', args => \"Invalid character in \".concat(args[0], \" [\").concat(args[1], \"]\"));\nmakeError(Error, 'ERR_HTTP2_NO_SOCKET_MANIPULATION', 'HTTP/2 sockets should not be directly manipulated (e.g. read and written)');","map":{"version":3,"names":["makeError","Base","key","getMessage","module","exports","NodeError","constructor","_len","arguments","length","args","Array","_key","name","concat","code","TypeError","type","includes","valid","isManyTypes","isArray","slice","join","Error"],"sources":["C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/http2-wrapper/source/utils/errors.js"],"sourcesContent":["'use strict';\n/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */\n\nconst makeError = (Base, key, getMessage) => {\n\tmodule.exports[key] = class NodeError extends Base {\n\t\tconstructor(...args) {\n\t\t\tsuper(typeof getMessage === 'string' ? getMessage : getMessage(args));\n\t\t\tthis.name = `${super.name} [${key}]`;\n\t\t\tthis.code = key;\n\t\t}\n\t};\n};\n\nmakeError(TypeError, 'ERR_INVALID_ARG_TYPE', args => {\n\tconst type = args[0].includes('.') ? 'property' : 'argument';\n\n\tlet valid = args[1];\n\tconst isManyTypes = Array.isArray(valid);\n\n\tif (isManyTypes) {\n\t\tvalid = `${valid.slice(0, -1).join(', ')} or ${valid.slice(-1)}`;\n\t}\n\n\treturn `The \"${args[0]}\" ${type} must be ${isManyTypes ? 'one of' : 'of'} type ${valid}. Received ${typeof args[2]}`;\n});\n\nmakeError(TypeError, 'ERR_INVALID_PROTOCOL', args =>\n\t`Protocol \"${args[0]}\" not supported. Expected \"${args[1]}\"`\n);\n\nmakeError(Error, 'ERR_HTTP_HEADERS_SENT', args =>\n\t`Cannot ${args[0]} headers after they are sent to the client`\n);\n\nmakeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', args =>\n\t`${args[0]} must be a valid HTTP token [${args[1]}]`\n);\n\nmakeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', args =>\n\t`Invalid value \"${args[0]} for header \"${args[1]}\"`\n);\n\nmakeError(TypeError, 'ERR_INVALID_CHAR', args =>\n\t`Invalid character in ${args[0]} [${args[1]}]`\n);\n\nmakeError(\n\tError,\n\t'ERR_HTTP2_NO_SOCKET_MANIPULATION',\n\t'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\n);\n"],"mappings":"AAAA,YAAY;;AACZ;AAEA,MAAMA,SAAS,GAAGA,CAACC,IAAI,EAAEC,GAAG,EAAEC,UAAU,KAAK;EAC5CC,MAAM,CAACC,OAAO,CAACH,GAAG,CAAC,GAAG,MAAMI,SAAS,SAASL,IAAI,CAAC;IAClDM,WAAWA,CAAA,EAAU;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAClB,KAAK,CAAC,OAAOV,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGA,UAAU,CAACQ,IAAI,CAAC,CAAC;MACrE,IAAI,CAACG,IAAI,MAAAC,MAAA,CAAM,KAAK,CAACD,IAAI,QAAAC,MAAA,CAAKb,GAAG,MAAG;MACpC,IAAI,CAACc,IAAI,GAAGd,GAAG;IAChB;EACD,CAAC;AACF,CAAC;AAEDF,SAAS,CAACiB,SAAS,EAAE,sBAAsB,EAAEN,IAAI,IAAI;EACpD,MAAMO,IAAI,GAAGP,IAAI,CAAC,CAAC,CAAC,CAACQ,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,UAAU;EAE5D,IAAIC,KAAK,GAAGT,IAAI,CAAC,CAAC,CAAC;EACnB,MAAMU,WAAW,GAAGT,KAAK,CAACU,OAAO,CAACF,KAAK,CAAC;EAExC,IAAIC,WAAW,EAAE;IAChBD,KAAK,MAAAL,MAAA,CAAMK,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,UAAAT,MAAA,CAAOK,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;EACjE;EAEA,gBAAAR,MAAA,CAAeJ,IAAI,CAAC,CAAC,CAAC,SAAAI,MAAA,CAAKG,IAAI,eAAAH,MAAA,CAAYM,WAAW,GAAG,QAAQ,GAAG,IAAI,YAAAN,MAAA,CAASK,KAAK,iBAAAL,MAAA,CAAc,OAAOJ,IAAI,CAAC,CAAC,CAAC;AACnH,CAAC,CAAC;AAEFX,SAAS,CAACiB,SAAS,EAAE,sBAAsB,EAAEN,IAAI,kBAAAI,MAAA,CACnCJ,IAAI,CAAC,CAAC,CAAC,mCAAAI,MAAA,CAA8BJ,IAAI,CAAC,CAAC,CAAC,OAC1D,CAAC;AAEDX,SAAS,CAACyB,KAAK,EAAE,uBAAuB,EAAEd,IAAI,cAAAI,MAAA,CACnCJ,IAAI,CAAC,CAAC,CAAC,+CAClB,CAAC;AAEDX,SAAS,CAACiB,SAAS,EAAE,wBAAwB,EAAEN,IAAI,OAAAI,MAAA,CAC/CJ,IAAI,CAAC,CAAC,CAAC,mCAAAI,MAAA,CAAgCJ,IAAI,CAAC,CAAC,CAAC,MAClD,CAAC;AAEDX,SAAS,CAACiB,SAAS,EAAE,+BAA+B,EAAEN,IAAI,uBAAAI,MAAA,CACvCJ,IAAI,CAAC,CAAC,CAAC,oBAAAI,MAAA,CAAgBJ,IAAI,CAAC,CAAC,CAAC,OACjD,CAAC;AAEDX,SAAS,CAACiB,SAAS,EAAE,kBAAkB,EAAEN,IAAI,4BAAAI,MAAA,CACpBJ,IAAI,CAAC,CAAC,CAAC,QAAAI,MAAA,CAAKJ,IAAI,CAAC,CAAC,CAAC,MAC5C,CAAC;AAEDX,SAAS,CACRyB,KAAK,EACL,kCAAkC,EAClC,2EACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}