{"ast":null,"code":"import _defineProperty from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncIterator from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { getAsyncIterable } from './stream.js';\nexport const getStreamContents = async function (stream, _ref) {\n  let {\n    init,\n    convertChunk,\n    getSize,\n    truncateChunk,\n    addChunk,\n    getFinalChunk,\n    finalize\n  } = _ref;\n  let {\n    maxBuffer = Number.POSITIVE_INFINITY\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const asyncIterable = getAsyncIterable(stream);\n  const state = init();\n  state.length = 0;\n  try {\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n    var _iteratorError;\n    try {\n      for (var _iterator = _asyncIterator(asyncIterable), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n        const chunk = _step.value;\n        {\n          const chunkType = getChunkType(chunk);\n          const convertedChunk = convertChunk[chunkType](chunk, state);\n          appendChunk({\n            convertedChunk,\n            state,\n            getSize,\n            truncateChunk,\n            addChunk,\n            maxBuffer\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          await _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    appendFinalChunk({\n      state,\n      convertChunk,\n      getSize,\n      truncateChunk,\n      addChunk,\n      getFinalChunk,\n      maxBuffer\n    });\n    return finalize(state);\n  } catch (error) {\n    const normalizedError = typeof error === 'object' && error !== null ? error : new Error(error);\n    normalizedError.bufferedData = finalize(state);\n    throw normalizedError;\n  }\n};\nconst appendFinalChunk = _ref2 => {\n  let {\n    state,\n    getSize,\n    truncateChunk,\n    addChunk,\n    getFinalChunk,\n    maxBuffer\n  } = _ref2;\n  const convertedChunk = getFinalChunk(state);\n  if (convertedChunk !== undefined) {\n    appendChunk({\n      convertedChunk,\n      state,\n      getSize,\n      truncateChunk,\n      addChunk,\n      maxBuffer\n    });\n  }\n};\nconst appendChunk = _ref3 => {\n  let {\n    convertedChunk,\n    state,\n    getSize,\n    truncateChunk,\n    addChunk,\n    maxBuffer\n  } = _ref3;\n  const chunkSize = getSize(convertedChunk);\n  const newLength = state.length + chunkSize;\n  if (newLength <= maxBuffer) {\n    addNewChunk(convertedChunk, state, addChunk, newLength);\n    return;\n  }\n  const truncatedChunk = truncateChunk(convertedChunk, maxBuffer - state.length);\n  if (truncatedChunk !== undefined) {\n    addNewChunk(truncatedChunk, state, addChunk, maxBuffer);\n  }\n  throw new MaxBufferError();\n};\nconst addNewChunk = (convertedChunk, state, addChunk, newLength) => {\n  state.contents = addChunk(convertedChunk, state, newLength);\n  state.length = newLength;\n};\nconst getChunkType = chunk => {\n  var _globalThis$Buffer;\n  const typeOfChunk = typeof chunk;\n  if (typeOfChunk === 'string') {\n    return 'string';\n  }\n  if (typeOfChunk !== 'object' || chunk === null) {\n    return 'others';\n  }\n  if ((_globalThis$Buffer = globalThis.Buffer) !== null && _globalThis$Buffer !== void 0 && _globalThis$Buffer.isBuffer(chunk)) {\n    return 'buffer';\n  }\n  const prototypeName = objectToString.call(chunk);\n  if (prototypeName === '[object ArrayBuffer]') {\n    return 'arrayBuffer';\n  }\n  if (prototypeName === '[object DataView]') {\n    return 'dataView';\n  }\n  if (Number.isInteger(chunk.byteLength) && Number.isInteger(chunk.byteOffset) && objectToString.call(chunk.buffer) === '[object ArrayBuffer]') {\n    return 'typedArray';\n  }\n  return 'others';\n};\nconst {\n  toString: objectToString\n} = Object.prototype;\nexport class MaxBufferError extends Error {\n  constructor() {\n    super('maxBuffer exceeded');\n    _defineProperty(this, \"name\", 'MaxBufferError');\n  }\n}","map":{"version":3,"names":["getAsyncIterable","getStreamContents","stream","_ref","init","convertChunk","getSize","truncateChunk","addChunk","getFinalChunk","finalize","maxBuffer","Number","POSITIVE_INFINITY","arguments","length","undefined","asyncIterable","state","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","chunk","value","chunkType","getChunkType","convertedChunk","appendChunk","err","return","appendFinalChunk","error","normalizedError","Error","bufferedData","_ref2","_ref3","chunkSize","newLength","addNewChunk","truncatedChunk","MaxBufferError","contents","_globalThis$Buffer","typeOfChunk","globalThis","Buffer","isBuffer","prototypeName","objectToString","call","isInteger","byteLength","byteOffset","buffer","toString","Object","prototype","constructor","_defineProperty"],"sources":["C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/cacheable-request/node_modules/get-stream/source/contents.js"],"sourcesContent":["import {getAsyncIterable} from './stream.js';\n\nexport const getStreamContents = async (stream, {init, convertChunk, getSize, truncateChunk, addChunk, getFinalChunk, finalize}, {maxBuffer = Number.POSITIVE_INFINITY} = {}) => {\n\tconst asyncIterable = getAsyncIterable(stream);\n\n\tconst state = init();\n\tstate.length = 0;\n\n\ttry {\n\t\tfor await (const chunk of asyncIterable) {\n\t\t\tconst chunkType = getChunkType(chunk);\n\t\t\tconst convertedChunk = convertChunk[chunkType](chunk, state);\n\t\t\tappendChunk({\n\t\t\t\tconvertedChunk,\n\t\t\t\tstate,\n\t\t\t\tgetSize,\n\t\t\t\ttruncateChunk,\n\t\t\t\taddChunk,\n\t\t\t\tmaxBuffer,\n\t\t\t});\n\t\t}\n\n\t\tappendFinalChunk({\n\t\t\tstate,\n\t\t\tconvertChunk,\n\t\t\tgetSize,\n\t\t\ttruncateChunk,\n\t\t\taddChunk,\n\t\t\tgetFinalChunk,\n\t\t\tmaxBuffer,\n\t\t});\n\t\treturn finalize(state);\n\t} catch (error) {\n\t\tconst normalizedError = typeof error === 'object' && error !== null ? error : new Error(error);\n\t\tnormalizedError.bufferedData = finalize(state);\n\t\tthrow normalizedError;\n\t}\n};\n\nconst appendFinalChunk = ({state, getSize, truncateChunk, addChunk, getFinalChunk, maxBuffer}) => {\n\tconst convertedChunk = getFinalChunk(state);\n\tif (convertedChunk !== undefined) {\n\t\tappendChunk({\n\t\t\tconvertedChunk,\n\t\t\tstate,\n\t\t\tgetSize,\n\t\t\ttruncateChunk,\n\t\t\taddChunk,\n\t\t\tmaxBuffer,\n\t\t});\n\t}\n};\n\nconst appendChunk = ({convertedChunk, state, getSize, truncateChunk, addChunk, maxBuffer}) => {\n\tconst chunkSize = getSize(convertedChunk);\n\tconst newLength = state.length + chunkSize;\n\n\tif (newLength <= maxBuffer) {\n\t\taddNewChunk(convertedChunk, state, addChunk, newLength);\n\t\treturn;\n\t}\n\n\tconst truncatedChunk = truncateChunk(convertedChunk, maxBuffer - state.length);\n\n\tif (truncatedChunk !== undefined) {\n\t\taddNewChunk(truncatedChunk, state, addChunk, maxBuffer);\n\t}\n\n\tthrow new MaxBufferError();\n};\n\nconst addNewChunk = (convertedChunk, state, addChunk, newLength) => {\n\tstate.contents = addChunk(convertedChunk, state, newLength);\n\tstate.length = newLength;\n};\n\nconst getChunkType = chunk => {\n\tconst typeOfChunk = typeof chunk;\n\n\tif (typeOfChunk === 'string') {\n\t\treturn 'string';\n\t}\n\n\tif (typeOfChunk !== 'object' || chunk === null) {\n\t\treturn 'others';\n\t}\n\n\tif (globalThis.Buffer?.isBuffer(chunk)) {\n\t\treturn 'buffer';\n\t}\n\n\tconst prototypeName = objectToString.call(chunk);\n\n\tif (prototypeName === '[object ArrayBuffer]') {\n\t\treturn 'arrayBuffer';\n\t}\n\n\tif (prototypeName === '[object DataView]') {\n\t\treturn 'dataView';\n\t}\n\n\tif (\n\t\tNumber.isInteger(chunk.byteLength)\n\t\t&& Number.isInteger(chunk.byteOffset)\n\t\t&& objectToString.call(chunk.buffer) === '[object ArrayBuffer]'\n\t) {\n\t\treturn 'typedArray';\n\t}\n\n\treturn 'others';\n};\n\nconst {toString: objectToString} = Object.prototype;\n\nexport class MaxBufferError extends Error {\n\tname = 'MaxBufferError';\n\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}