{"ast":null,"code":"import _objectSpread from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncIterator from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _awaitAsyncGenerator from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport { setTimeout as delay } from 'node:timers/promises';\nimport is, { assert } from '@sindresorhus/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js';\nconst isGotInstance = value => is.function(value);\nconst aliases = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst create = defaults => {\n  defaults = {\n    options: new Options(undefined, undefined, defaults.options),\n    handlers: [...defaults.handlers],\n    mutableDefaults: defaults.mutableDefaults\n  };\n  Object.defineProperty(defaults, 'mutableDefaults', {\n    enumerable: true,\n    configurable: false,\n    writable: false\n  });\n  // Got interface\n  const got = function (url, options) {\n    let defaultOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.options;\n    const request = new Request(url, options, defaultOptions);\n    let promise;\n    const lastHandler = normalized => {\n      // Note: `options` is `undefined` when `new Options(...)` fails\n      request.options = normalized;\n      request._noPipe = !(normalized !== null && normalized !== void 0 && normalized.isStream);\n      void request.flush();\n      if (normalized !== null && normalized !== void 0 && normalized.isStream) {\n        return request;\n      }\n      promise || (promise = asPromise(request));\n      return promise;\n    };\n    let iteration = 0;\n    const iterateHandlers = newOptions => {\n      var _defaults$handlers$it, _request$options;\n      const handler = (_defaults$handlers$it = defaults.handlers[iteration++]) !== null && _defaults$handlers$it !== void 0 ? _defaults$handlers$it : lastHandler;\n      const result = handler(newOptions, iterateHandlers);\n      if (is.promise(result) && !((_request$options = request.options) !== null && _request$options !== void 0 && _request$options.isStream)) {\n        promise || (promise = asPromise(request));\n        if (result !== promise) {\n          const descriptors = Object.getOwnPropertyDescriptors(promise);\n          for (const key in descriptors) {\n            if (key in result) {\n              // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n              delete descriptors[key];\n            }\n          }\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          Object.defineProperties(result, descriptors);\n          result.cancel = promise.cancel;\n        }\n      }\n      return result;\n    };\n    return iterateHandlers(request.options);\n  };\n  got.extend = function () {\n    const options = new Options(undefined, undefined, defaults.options);\n    const handlers = [...defaults.handlers];\n    let mutableDefaults;\n    for (var _len = arguments.length, instancesOrOptions = new Array(_len), _key = 0; _key < _len; _key++) {\n      instancesOrOptions[_key] = arguments[_key];\n    }\n    for (const value of instancesOrOptions) {\n      if (isGotInstance(value)) {\n        options.merge(value.defaults.options);\n        handlers.push(...value.defaults.handlers);\n        mutableDefaults = value.defaults.mutableDefaults;\n      } else {\n        options.merge(value);\n        if (value.handlers) {\n          handlers.push(...value.handlers);\n        }\n        mutableDefaults = value.mutableDefaults;\n      }\n    }\n    return create({\n      options,\n      handlers,\n      mutableDefaults: Boolean(mutableDefaults)\n    });\n  };\n  // Pagination\n  const paginateEach = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator(function* (url, options) {\n      let normalizedOptions = new Options(url, options, defaults.options);\n      normalizedOptions.resolveBodyOnly = false;\n      const {\n        pagination\n      } = normalizedOptions;\n      assert.function(pagination.transform);\n      assert.function(pagination.shouldContinue);\n      assert.function(pagination.filter);\n      assert.function(pagination.paginate);\n      assert.number(pagination.countLimit);\n      assert.number(pagination.requestLimit);\n      assert.number(pagination.backoff);\n      const allItems = [];\n      let {\n        countLimit\n      } = pagination;\n      let numberOfRequests = 0;\n      while (numberOfRequests < pagination.requestLimit) {\n        if (numberOfRequests !== 0) {\n          // eslint-disable-next-line no-await-in-loop\n          yield _awaitAsyncGenerator(delay(pagination.backoff));\n        }\n        // eslint-disable-next-line no-await-in-loop\n        const response = yield _awaitAsyncGenerator(got(undefined, undefined, normalizedOptions));\n        // eslint-disable-next-line no-await-in-loop\n        const parsed = yield _awaitAsyncGenerator(pagination.transform(response));\n        const currentItems = [];\n        assert.array(parsed);\n        for (const item of parsed) {\n          if (pagination.filter({\n            item,\n            currentItems,\n            allItems\n          })) {\n            if (!pagination.shouldContinue({\n              item,\n              currentItems,\n              allItems\n            })) {\n              return;\n            }\n            yield item;\n            if (pagination.stackAllItems) {\n              allItems.push(item);\n            }\n            currentItems.push(item);\n            if (--countLimit <= 0) {\n              return;\n            }\n          }\n        }\n        const optionsToMerge = pagination.paginate({\n          response,\n          currentItems,\n          allItems\n        });\n        if (optionsToMerge === false) {\n          return;\n        }\n        if (optionsToMerge === response.request.options) {\n          normalizedOptions = response.request.options;\n        } else {\n          normalizedOptions.merge(optionsToMerge);\n          assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n          if (optionsToMerge.url !== undefined) {\n            normalizedOptions.prefixUrl = '';\n            normalizedOptions.url = optionsToMerge.url;\n          }\n        }\n        numberOfRequests++;\n      }\n    });\n    return function paginateEach(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  got.paginate = paginateEach;\n  got.paginate.all = async (url, options) => {\n    const results = [];\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n    var _iteratorError;\n    try {\n      for (var _iterator = _asyncIterator(paginateEach(url, options)), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n        const item = _step.value;\n        {\n          results.push(item);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          await _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    return results;\n  };\n  // For those who like very descriptive names\n  got.paginate.each = paginateEach;\n  // Stream API\n  got.stream = (url, options) => got(url, _objectSpread(_objectSpread({}, options), {}, {\n    isStream: true\n  }));\n  // Shortcuts\n  for (const method of aliases) {\n    got[method] = (url, options) => got(url, _objectSpread(_objectSpread({}, options), {}, {\n      method\n    }));\n    got.stream[method] = (url, options) => got(url, _objectSpread(_objectSpread({}, options), {}, {\n      method,\n      isStream: true\n    }));\n  }\n  if (!defaults.mutableDefaults) {\n    Object.freeze(defaults.handlers);\n    defaults.options.freeze();\n  }\n  Object.defineProperty(got, 'defaults', {\n    value: defaults,\n    writable: false,\n    configurable: false,\n    enumerable: true\n  });\n  return got;\n};\nexport default create;","map":{"version":3,"names":["setTimeout","delay","is","assert","asPromise","Request","Options","isGotInstance","value","function","aliases","create","defaults","options","undefined","handlers","mutableDefaults","Object","defineProperty","enumerable","configurable","writable","got","url","defaultOptions","arguments","length","request","promise","lastHandler","normalized","_noPipe","isStream","flush","iteration","iterateHandlers","newOptions","_defaults$handlers$it","_request$options","handler","result","descriptors","getOwnPropertyDescriptors","key","defineProperties","cancel","extend","_len","instancesOrOptions","Array","_key","merge","push","Boolean","paginateEach","_ref","_wrapAsyncGenerator","normalizedOptions","resolveBodyOnly","pagination","transform","shouldContinue","filter","paginate","number","countLimit","requestLimit","backoff","allItems","numberOfRequests","_awaitAsyncGenerator","response","parsed","currentItems","array","item","stackAllItems","optionsToMerge","any","urlInstance","prefixUrl","_x","_x2","apply","all","results","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","err","return","each","stream","_objectSpread","method","freeze"],"sources":["C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/got/dist/source/create.js"],"sourcesContent":["import { setTimeout as delay } from 'node:timers/promises';\nimport is, { assert } from '@sindresorhus/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js';\nconst isGotInstance = (value) => is.function(value);\nconst aliases = [\n    'get',\n    'post',\n    'put',\n    'patch',\n    'head',\n    'delete',\n];\nconst create = (defaults) => {\n    defaults = {\n        options: new Options(undefined, undefined, defaults.options),\n        handlers: [...defaults.handlers],\n        mutableDefaults: defaults.mutableDefaults,\n    };\n    Object.defineProperty(defaults, 'mutableDefaults', {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n    });\n    // Got interface\n    const got = ((url, options, defaultOptions = defaults.options) => {\n        const request = new Request(url, options, defaultOptions);\n        let promise;\n        const lastHandler = (normalized) => {\n            // Note: `options` is `undefined` when `new Options(...)` fails\n            request.options = normalized;\n            request._noPipe = !normalized?.isStream;\n            void request.flush();\n            if (normalized?.isStream) {\n                return request;\n            }\n            promise ||= asPromise(request);\n            return promise;\n        };\n        let iteration = 0;\n        const iterateHandlers = (newOptions) => {\n            const handler = defaults.handlers[iteration++] ?? lastHandler;\n            const result = handler(newOptions, iterateHandlers);\n            if (is.promise(result) && !request.options?.isStream) {\n                promise ||= asPromise(request);\n                if (result !== promise) {\n                    const descriptors = Object.getOwnPropertyDescriptors(promise);\n                    for (const key in descriptors) {\n                        if (key in result) {\n                            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                            delete descriptors[key];\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    Object.defineProperties(result, descriptors);\n                    result.cancel = promise.cancel;\n                }\n            }\n            return result;\n        };\n        return iterateHandlers(request.options);\n    });\n    got.extend = (...instancesOrOptions) => {\n        const options = new Options(undefined, undefined, defaults.options);\n        const handlers = [...defaults.handlers];\n        let mutableDefaults;\n        for (const value of instancesOrOptions) {\n            if (isGotInstance(value)) {\n                options.merge(value.defaults.options);\n                handlers.push(...value.defaults.handlers);\n                mutableDefaults = value.defaults.mutableDefaults;\n            }\n            else {\n                options.merge(value);\n                if (value.handlers) {\n                    handlers.push(...value.handlers);\n                }\n                mutableDefaults = value.mutableDefaults;\n            }\n        }\n        return create({\n            options,\n            handlers,\n            mutableDefaults: Boolean(mutableDefaults),\n        });\n    };\n    // Pagination\n    const paginateEach = (async function* (url, options) {\n        let normalizedOptions = new Options(url, options, defaults.options);\n        normalizedOptions.resolveBodyOnly = false;\n        const { pagination } = normalizedOptions;\n        assert.function(pagination.transform);\n        assert.function(pagination.shouldContinue);\n        assert.function(pagination.filter);\n        assert.function(pagination.paginate);\n        assert.number(pagination.countLimit);\n        assert.number(pagination.requestLimit);\n        assert.number(pagination.backoff);\n        const allItems = [];\n        let { countLimit } = pagination;\n        let numberOfRequests = 0;\n        while (numberOfRequests < pagination.requestLimit) {\n            if (numberOfRequests !== 0) {\n                // eslint-disable-next-line no-await-in-loop\n                await delay(pagination.backoff);\n            }\n            // eslint-disable-next-line no-await-in-loop\n            const response = (await got(undefined, undefined, normalizedOptions));\n            // eslint-disable-next-line no-await-in-loop\n            const parsed = await pagination.transform(response);\n            const currentItems = [];\n            assert.array(parsed);\n            for (const item of parsed) {\n                if (pagination.filter({ item, currentItems, allItems })) {\n                    if (!pagination.shouldContinue({ item, currentItems, allItems })) {\n                        return;\n                    }\n                    yield item;\n                    if (pagination.stackAllItems) {\n                        allItems.push(item);\n                    }\n                    currentItems.push(item);\n                    if (--countLimit <= 0) {\n                        return;\n                    }\n                }\n            }\n            const optionsToMerge = pagination.paginate({\n                response,\n                currentItems,\n                allItems,\n            });\n            if (optionsToMerge === false) {\n                return;\n            }\n            if (optionsToMerge === response.request.options) {\n                normalizedOptions = response.request.options;\n            }\n            else {\n                normalizedOptions.merge(optionsToMerge);\n                assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n                if (optionsToMerge.url !== undefined) {\n                    normalizedOptions.prefixUrl = '';\n                    normalizedOptions.url = optionsToMerge.url;\n                }\n            }\n            numberOfRequests++;\n        }\n    });\n    got.paginate = paginateEach;\n    got.paginate.all = (async (url, options) => {\n        const results = [];\n        for await (const item of paginateEach(url, options)) {\n            results.push(item);\n        }\n        return results;\n    });\n    // For those who like very descriptive names\n    got.paginate.each = paginateEach;\n    // Stream API\n    got.stream = ((url, options) => got(url, { ...options, isStream: true }));\n    // Shortcuts\n    for (const method of aliases) {\n        got[method] = ((url, options) => got(url, { ...options, method }));\n        got.stream[method] = ((url, options) => got(url, { ...options, method, isStream: true }));\n    }\n    if (!defaults.mutableDefaults) {\n        Object.freeze(defaults.handlers);\n        defaults.options.freeze();\n    }\n    Object.defineProperty(got, 'defaults', {\n        value: defaults,\n        writable: false,\n        configurable: false,\n        enumerable: true,\n    });\n    return got;\n};\nexport default create;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}