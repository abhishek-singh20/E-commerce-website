{"ast":null,"code":"import _defineProperty from \"C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport is from '@sindresorhus/is';\n// A hacky check to prevent circular references.\nfunction isRequest(x) {\n  return is.object(x) && '_onResponse' in x;\n}\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\nexport class RequestError extends Error {\n  constructor(message, error, self) {\n    var _error$code, _this$request;\n    super(message, {\n      cause: error\n    });\n    _defineProperty(this, \"input\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"stack\", void 0);\n    _defineProperty(this, \"response\", void 0);\n    _defineProperty(this, \"request\", void 0);\n    _defineProperty(this, \"timings\", void 0);\n    Error.captureStackTrace(this, this.constructor);\n    this.name = 'RequestError';\n    this.code = (_error$code = error.code) !== null && _error$code !== void 0 ? _error$code : 'ERR_GOT_REQUEST_ERROR';\n    this.input = error.input;\n    if (isRequest(self)) {\n      Object.defineProperty(this, 'request', {\n        enumerable: false,\n        value: self\n      });\n      Object.defineProperty(this, 'response', {\n        enumerable: false,\n        value: self.response\n      });\n      this.options = self.options;\n    } else {\n      this.options = self;\n    }\n    this.timings = (_this$request = this.request) === null || _this$request === void 0 ? void 0 : _this$request.timings;\n    // Recover the original stacktrace\n    if (is.string(error.stack) && is.string(this.stack)) {\n      const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n      const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n      const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse();\n      // Remove duplicated traces\n      while (errorStackTrace.length > 0 && errorStackTrace[0] === thisStackTrace[0]) {\n        thisStackTrace.shift();\n      }\n      this.stack = \"\".concat(this.stack.slice(0, indexOfMessage)).concat(thisStackTrace.reverse().join('\\n')).concat(errorStackTrace.reverse().join('\\n'));\n    }\n  }\n}\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\nexport class MaxRedirectsError extends RequestError {\n  constructor(request) {\n    super(\"Redirected \".concat(request.options.maxRedirects, \" times. Aborting.\"), {}, request);\n    this.name = 'MaxRedirectsError';\n    this.code = 'ERR_TOO_MANY_REDIRECTS';\n  }\n}\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\n// TODO: Change `HTTPError<T = any>` to `HTTPError<T = unknown>` in the next major version to enforce type usage.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends RequestError {\n  constructor(response) {\n    super(\"Response code \".concat(response.statusCode, \" (\").concat(response.statusMessage, \")\"), {}, response.request);\n    this.name = 'HTTPError';\n    this.code = 'ERR_NON_2XX_3XX_RESPONSE';\n  }\n}\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\nexport class CacheError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'CacheError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_CACHE_ACCESS' : this.code;\n  }\n}\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\nexport class UploadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'UploadError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_UPLOAD' : this.code;\n  }\n}\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\nexport class TimeoutError extends RequestError {\n  constructor(error, timings, request) {\n    super(error.message, error, request);\n    _defineProperty(this, \"timings\", void 0);\n    _defineProperty(this, \"event\", void 0);\n    this.name = 'TimeoutError';\n    this.event = error.event;\n    this.timings = timings;\n  }\n}\n/**\nAn error to be thrown when reading from response stream fails.\n*/\nexport class ReadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'ReadError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_READING_RESPONSE_STREAM' : this.code;\n  }\n}\n/**\nAn error which always triggers a new retry when thrown.\n*/\nexport class RetryError extends RequestError {\n  constructor(request) {\n    super('Retrying', {}, request);\n    this.name = 'RetryError';\n    this.code = 'ERR_RETRYING';\n  }\n}\n/**\nAn error to be thrown when the request is aborted by AbortController.\n*/\nexport class AbortError extends RequestError {\n  constructor(request) {\n    super('This operation was aborted.', {}, request);\n    this.code = 'ERR_ABORTED';\n    this.name = 'AbortError';\n  }\n}","map":{"version":3,"names":["is","isRequest","x","object","RequestError","Error","constructor","message","error","self","_error$code","_this$request","cause","_defineProperty","captureStackTrace","name","code","input","Object","defineProperty","enumerable","value","response","options","timings","request","string","stack","indexOfMessage","indexOf","length","thisStackTrace","slice","split","reverse","errorStackTrace","shift","concat","join","MaxRedirectsError","maxRedirects","HTTPError","statusCode","statusMessage","CacheError","UploadError","TimeoutError","event","ReadError","RetryError","AbortError"],"sources":["C:/Users/sakas/OneDrive/Desktop/gogo/node_modules/got/dist/source/core/errors.js"],"sourcesContent":["import is from '@sindresorhus/is';\n// A hacky check to prevent circular references.\nfunction isRequest(x) {\n    return is.object(x) && '_onResponse' in x;\n}\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\nexport class RequestError extends Error {\n    input;\n    code;\n    stack;\n    response;\n    request;\n    timings;\n    constructor(message, error, self) {\n        super(message, { cause: error });\n        Error.captureStackTrace(this, this.constructor);\n        this.name = 'RequestError';\n        this.code = error.code ?? 'ERR_GOT_REQUEST_ERROR';\n        this.input = error.input;\n        if (isRequest(self)) {\n            Object.defineProperty(this, 'request', {\n                enumerable: false,\n                value: self,\n            });\n            Object.defineProperty(this, 'response', {\n                enumerable: false,\n                value: self.response,\n            });\n            this.options = self.options;\n        }\n        else {\n            this.options = self;\n        }\n        this.timings = this.request?.timings;\n        // Recover the original stacktrace\n        if (is.string(error.stack) && is.string(this.stack)) {\n            const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n            const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n            const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse();\n            // Remove duplicated traces\n            while (errorStackTrace.length > 0 && errorStackTrace[0] === thisStackTrace[0]) {\n                thisStackTrace.shift();\n            }\n            this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n        }\n    }\n}\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\nexport class MaxRedirectsError extends RequestError {\n    constructor(request) {\n        super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n        this.name = 'MaxRedirectsError';\n        this.code = 'ERR_TOO_MANY_REDIRECTS';\n    }\n}\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\n// TODO: Change `HTTPError<T = any>` to `HTTPError<T = unknown>` in the next major version to enforce type usage.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends RequestError {\n    constructor(response) {\n        super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n        this.name = 'HTTPError';\n        this.code = 'ERR_NON_2XX_3XX_RESPONSE';\n    }\n}\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\nexport class CacheError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'CacheError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_CACHE_ACCESS' : this.code;\n    }\n}\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\nexport class UploadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'UploadError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_UPLOAD' : this.code;\n    }\n}\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\nexport class TimeoutError extends RequestError {\n    timings;\n    event;\n    constructor(error, timings, request) {\n        super(error.message, error, request);\n        this.name = 'TimeoutError';\n        this.event = error.event;\n        this.timings = timings;\n    }\n}\n/**\nAn error to be thrown when reading from response stream fails.\n*/\nexport class ReadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'ReadError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_READING_RESPONSE_STREAM' : this.code;\n    }\n}\n/**\nAn error which always triggers a new retry when thrown.\n*/\nexport class RetryError extends RequestError {\n    constructor(request) {\n        super('Retrying', {}, request);\n        this.name = 'RetryError';\n        this.code = 'ERR_RETRYING';\n    }\n}\n/**\nAn error to be thrown when the request is aborted by AbortController.\n*/\nexport class AbortError extends RequestError {\n    constructor(request) {\n        super('This operation was aborted.', {}, request);\n        this.code = 'ERR_ABORTED';\n        this.name = 'AbortError';\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}